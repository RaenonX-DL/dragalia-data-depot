name: Resource Deployment (Repository Dispatch)

on:
  repository_dispatch:
    types: [deploy]

jobs:
  info:
    name: Deployment info & check

    runs-on: windows-latest
    
    steps:
      - name: "[INFO] Manifest IV available"
        run: |
          if ([string]::IsNullOrWhiteSpace(${{ github.event.client_payload.iv }}) {exit 1}
          echo "Manifest IV available"
        
      - name: "[INFO] Manifest key available"
        run: |
          if ([string]::IsNullOrWhiteSpace(${{ github.event.client_payload.key }}) {exit 1}
          echo "Manifest key available"
        
      - name: "[INFO] Version code"
        run: |
          if ([string]::IsNullOrWhiteSpace(${{ github.event.client_payload.version }}) {exit 1}
          echo "${{ github.event.client_payload.version }}"
        
      - name: "[INFO] Patch releasing date"
        run: |
          if ([string]::IsNullOrWhiteSpace(${{ github.event.client_payload.date }}) {exit 1}
          echo "${{ github.event.client_payload.date }}"
        
      - name: "[INFO] Patch releasing time"
        run: |
          if ([string]::IsNullOrWhiteSpace(${{ github.event.client_payload.time }}) {exit 1}
          echo "${{ github.event.client_payload.time }}"

  deploy-resource:
    name: Deploy resources

    needs: [info]

    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      
      - name: "[Git] Prepare Commit Message"
        id: git-commit-msg
        run: |
          $commit = "${{ github.event.client_payload.date }} ${{ github.event.client_payload.time }} - ${{ github.event.client_payload.version }}"
          echo $commit
          echo "::set-output name=out::$commit"
          
      - name: "[Git] Prepare Tag Name"
        id: git-tag-name
        run: |
          $tag = "$("${{ github.event.client_payload.date }}" -replace "/", ".")-${{ github.event.client_payload.version }}"
          echo $tag
          echo "::set-output name=out::$tag"
          
      - name: "Dump Resources"
        run: |
          $event = Get-Content $Env:GITHUB_EVENT_PATH | ConvertFrom-Json
          $iv = $event.client_payload.iv
          $key = $event.client_payload.key
          dumper/bin/dldump.exe ${{ github.event.inputs.version-code }} `
            --export-path . `
            --cdn-path dumper/cdn `
            --config-path dumper/config.json `
            --iv $iv `
            --key $key
      
      - name: "[Git] Configure"
        run: |
          git config --global user.name "RaenonX"
          git config --global user.email "raenonx0710@gmail.com"
          
      - name: "[Git] Check Changes"
        id: git-check
        run: |
          $diff = $(git status --porcelain)
          echo $diff
          echo "::set-output name=diff::$diff"
          
      - name: "[Git] Commit Changes"
        if: steps.git-check.outputs.diff
        run: |
          git add .
          git commit -m "${{ steps.git-commit-msg.outputs.out }}"
          
      - name: "[Git] Add Tag"
        if: steps.git-check.outputs.diff
        run: |
          git tag -a "${{ steps.git-tag-name.outputs.out }}" -m "${{ steps.git-tag-name.outputs.out }}"
          
      - name: "[Git] Push Changes"
        if: steps.git-check.outputs.diff
        run: |
          git pull
          git push --follow-tags
